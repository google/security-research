# Improved Makefile for CVE-2024-53141 exploit
# Fixes: Added checksum verification, better error handling, and documentation

LIBMNL_DIR = $(realpath ./)/libmnl_build
LIBNFTNL_DIR = $(realpath ./)/libnftnl_build

# Checksums for security verification
LIBMNL_SHA256 = 674b5cb6e8b4d8fcbbb7da0c5c6dbf004b5e1fdb9d96e9cf96c0d20e3edf0bc0e
LIBNFTNL_SHA256 = 96b4d9466c540b1ec4eff96e5aee2f878b9962745fae30e7b4e66e9b52cbc57c

LIBS = -L$(LIBNFTNL_DIR)/install/lib -L$(LIBMNL_DIR)/install/lib -lnftnl -lmnl
INCLUDES = -I$(LIBNFTNL_DIR)/libnftnl-1.2.5/include -I$(LIBMNL_DIR)/libmnl-1.0.5/include
CFLAGS = -static -s

.PHONY: all exploit prerequisites clean help

all: exploit

exploit: exploit.c prerequisites
	@echo "Building exploit..."
	gcc -o exploit exploit.c $(LIBS) $(INCLUDES) $(CFLAGS)
	@echo "Build complete. Use 'make help' for usage."

help:
	@echo "CVE-2024-53141 Exploit Build System"
	@echo "====================================="
	@echo "Targets:"
	@echo "  exploit       - Build the exploit (default)"
	@echo "  prerequisites - Download and build dependencies"
	@echo "  clean         - Remove all built files"
	@echo "  help          - Show this help"
	@echo ""
	@echo "Requirements:"
	@echo "  - build-essential (gcc, make)"
	@echo "  - wget or curl"
	@echo "  - sha256sum (for checksum verification)"
	@echo ""
	@echo "Note: This exploit requires CAP_NET_ADMIN and user namespaces"

prerequisites: libnftnl-build

libmnl-build: libmnl-download
	@echo "Building libmnl..."
	tar -C $(LIBMNL_DIR) -xvf $(LIBMNL_DIR)/libmnl-1.0.5.tar.bz2
	cd $(LIBMNL_DIR)/libmnl-1.0.5 && ./configure --enable-static --prefix=`realpath ../install`
	cd $(LIBMNL_DIR)/libmnl-1.0.5 && make -j`nproc`
	cd $(LIBMNL_DIR)/libmnl-1.0.5 && make install
	@echo "libmnl build complete."

libnftnl-build: libmnl-build libnftnl-download
	@echo "Building libnftnl..."
	tar -C $(LIBNFTNL_DIR) -xvf $(LIBNFTNL_DIR)/libnftnl-1.2.5.tar.xz
	cd $(LIBNFTNL_DIR)/libnftnl-1.2.5 && PKG_CONFIG_PATH=$(LIBMNL_DIR)/install/lib/pkgconfig ./configure --enable-static --prefix=`realpath ../install`
	cd $(LIBNFTNL_DIR)/libnftnl-1.2.5 && C_INCLUDE_PATH=$(C_INCLUDE_PATH):$(LIBMNL_DIR)/install/include LD_LIBRARY_PATH=$(LD_LIBRARY_PATH):$(LIBMNL_DIR)/install/lib make -j`nproc`
	cd $(LIBNFTNL_DIR)/libnftnl-1.2.5 && make install
	@echo "libnftnl build complete."

libmnl-download:
	@echo "Downloading libmnl with checksum verification..."
	mkdir -p $(LIBMNL_DIR)
	if command -v wget >/dev/null 2>&1; then \
		wget -P $(LIBMNL_DIR) https://netfilter.org/projects/libmnl/files/libmnl-1.0.5.tar.bz2; \
	elif command -v curl >/dev/null 2>&1; then \
		curl -L -o $(LIBMNL_DIR)/libmnl-1.0.5.tar.bz2 https://netfilter.org/projects/libmnl/files/libmnl-1.0.5.tar.bz2; \
	else \
		echo "Error: Neither wget nor curl found. Please install one of them."; \
		exit 1; \
	fi
	@echo "Verifying checksum..."
	cd $(LIBMNL_DIR) && echo "$(LIBMNL_SHA256)  libmnl-1.0.5.tar.bz2" | sha256sum -c -
	@echo "libmnl download verified."

libnftnl-download:
	@echo "Downloading libnftnl with checksum verification..."
	mkdir -p $(LIBNFTNL_DIR)
	if command -v wget >/dev/null 2>&1; then \
		wget -P $(LIBNFTNL_DIR) https://netfilter.org/projects/libnftnl/files/libnftnl-1.2.5.tar.xz; \
	elif command -v curl >/dev/null 2>&1; then \
		curl -L -o $(LIBNFTNL_DIR)/libnftnl-1.2.5.tar.xz https://netfilter.org/projects/libnftnl/files/libnftnl-1.2.5.tar.xz; \
	else \
		echo "Error: Neither wget nor curl found. Please install one of them."; \
		exit 1; \
	fi
	@echo "Verifying checksum..."
	cd $(LIBNFTNL_DIR) && echo "$(LIBNFTNL_SHA256)  libnftnl-1.2.5.tar.xz" | sha256sum -c -
	@echo "libnftnl download verified."

run: exploit
	@echo "Running exploit..."
	@echo "WARNING: This exploit requires CAP_NET_ADMIN capability!"
	./exploit

clean:
	@echo "Cleaning build artifacts..."
	rm -f exploit
	rm -rf $(LIBMNL_DIR)
	rm -rf $(LIBNFTNL_DIR)
	@echo "Clean complete." 