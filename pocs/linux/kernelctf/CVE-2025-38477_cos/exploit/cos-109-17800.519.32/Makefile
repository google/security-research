# Makefile for CVE-2025-38477 exploit

CC = gcc
CFLAGS = -static -w
DBGFLAGS = -g
TARGET = exploit
SOURCE = exploit.c

# libx configuration - expects libx to be in ./libx directory
LIBX_DIR = ./libx
LIBX_LIB = $(LIBX_DIR)/libx.a
LIBX_INCLUDE = $(LIBX_DIR)

# Directly link the local static library to avoid conflicts with system libx
INCLUDES = -I$(LIBX_INCLUDE)

.PHONY: all clean check-libx libx

all: $(LIBX_LIB) $(TARGET)

# Check if libx directory exists
check-libx:
	@if [ ! -d "$(LIBX_DIR)" ]; then \
		echo "Error: libx directory not found at $(LIBX_DIR)!"; \
		echo "Please ensure libx is present in the current directory"; \
		exit 1; \
	fi

# Build libx from local source
$(LIBX_LIB): check-libx
	@echo "Building libx..."
	@$(MAKE) -C $(LIBX_DIR)
	@echo "libx is ready!"

# Convenience target to just build libx
libx: $(LIBX_LIB)

$(TARGET): $(SOURCE) $(LIBX_LIB)
	$(CC) $(CFLAGS) $(INCLUDES) $(SOURCE) -o $(TARGET) $(LIBX_LIB)


# Debug build expected by CI workflow
.PHONY: exploit_debug
exploit_debug: $(SOURCE) $(LIBX_LIB)
	$(CC) $(filter-out -s,$(CFLAGS)) $(DBGFLAGS) $(INCLUDES) \
		$(SOURCE) -o exploit_debug $(LIBX_LIB)

clean:
	rm -f $(TARGET)
	rm -f exploit_debug
	@if [ -d "$(LIBX_DIR)" ]; then \
		echo "Cleaning libx..."; \
		$(MAKE) -C $(LIBX_DIR) clean 2>/dev/null || true; \
	fi
